{"ast":null,"code":"var _jsxFileName = \"/Users/bytedance/PersonalityQuiz/my-personality-quiz/src/QuestionPage.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionPage = ({\n  question,\n  optionA,\n  optionB,\n  displayNextQuestion,\n  currentQuestionIndex,\n  totalQuestions,\n  svgUrls,\n  backgroundImage,\n  fontColorRanges\n}) => {\n  // Determine font color based on the current question index\n  const getFontColor = () => {\n    const range = fontColorRanges.find(({\n      start,\n      end\n    }) => currentQuestionIndex >= start && currentQuestionIndex <= end);\n    return range ? range.color : '#fff'; // Default to white if no matching range is found\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"question-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-content\",\n      style: {\n        backgroundImage: `url('${backgroundImage}')`,\n        backgroundSize: 'contain',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        color: getFontColor() // Set font color dynamically\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => displayNextQuestion('A'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: optionA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => displayNextQuestion('B'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: optionB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionPage;\nexport default QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","QuestionPage","question","optionA","optionB","displayNextQuestion","currentQuestionIndex","totalQuestions","svgUrls","backgroundImage","fontColorRanges","getFontColor","range","find","start","end","color","className","children","style","backgroundSize","backgroundPosition","backgroundRepeat","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/bytedance/PersonalityQuiz/my-personality-quiz/src/QuestionPage.js"],"sourcesContent":["import React from 'react';\n\nconst QuestionPage = ({ question, optionA, optionB, displayNextQuestion, currentQuestionIndex, totalQuestions, svgUrls, backgroundImage, fontColorRanges }) => {\n  // Determine font color based on the current question index\n  const getFontColor = () => {\n    const range = fontColorRanges.find(({ start, end }) => currentQuestionIndex >= start && currentQuestionIndex <= end);\n    return range ? range.color : '#fff'; // Default to white if no matching range is found\n  };\n\n  return (\n    <section className=\"question-page\">\n      <div className=\"question-content\" style={{ \n        backgroundImage: `url('${backgroundImage}')`,\n        backgroundSize: 'contain',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        color: getFontColor() // Set font color dynamically\n      }}>\n        <h2>{question}</h2>\n      </div>\n      <div className=\"options\">\n        <button onClick={() => displayNextQuestion('A')}><span>{optionA}</span></button>\n        <button onClick={() => displayNextQuestion('B')}><span>{optionB}</span></button>\n      </div>\n    </section>\n  );\n};\n\nexport default QuestionPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,OAAO;EAAEC,mBAAmB;EAAEC,oBAAoB;EAAEC,cAAc;EAAEC,OAAO;EAAEC,eAAe;EAAEC;AAAgB,CAAC,KAAK;EAC7J;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,KAAK,GAAGF,eAAe,CAACG,IAAI,CAAC,CAAC;MAAEC,KAAK;MAAEC;IAAI,CAAC,KAAKT,oBAAoB,IAAIQ,KAAK,IAAIR,oBAAoB,IAAIS,GAAG,CAAC;IACpH,OAAOH,KAAK,GAAGA,KAAK,CAACI,KAAK,GAAG,MAAM,CAAC,CAAC;EACvC,CAAC;EAED,oBACEhB,OAAA;IAASiB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAChClB,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAACE,KAAK,EAAE;QACvCV,eAAe,EAAG,QAAOA,eAAgB,IAAG;QAC5CW,cAAc,EAAE,SAAS;QACzBC,kBAAkB,EAAE,QAAQ;QAC5BC,gBAAgB,EAAE,WAAW;QAC7BN,KAAK,EAAEL,YAAY,CAAC,CAAC,CAAC;MACxB,CAAE;MAAAO,QAAA,eACAlB,OAAA;QAAAkB,QAAA,EAAKhB;MAAQ;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACN1B,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBlB,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMtB,mBAAmB,CAAC,GAAG,CAAE;QAAAa,QAAA,eAAClB,OAAA;UAAAkB,QAAA,EAAOf;QAAO;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChF1B,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMtB,mBAAmB,CAAC,GAAG,CAAE;QAAAa,QAAA,eAAClB,OAAA;UAAAkB,QAAA,EAAOd;QAAO;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACE,EAAA,GAxBI3B,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}