{"ast":null,"code":"var _jsxFileName = \"/Users/bytedance/PersonalityQuiz/my-personality-quiz/src/ResultPage.js\",\n  _s = $RefreshSig$();\nimport svgUrls from './svgurl'; // Import SVG URLs\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultPage = ({\n  mbtiType,\n  restartQuiz\n}) => {\n  _s();\n  const [copied, setCopied] = useState(false);\n  // Function to share the quiz link\n  // Function to share the quiz link\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(window.location.href);\n      setCopied(true);\n    } catch (error) {\n      console.error('Error copying to clipboard:', error);\n    }\n  };\n\n  // Function to share via Telegram\n  const shareViaTelegram = () => {\n    const message = encodeURIComponent(`Check out my workplace personality quiz result! ${window.location.href}`);\n    const telegramUrl = `https://t.me/share/url?url=${message}`;\n    window.open(telegramUrl, '_blank');\n  };\n\n  // Function to share via WhatsApp\n  const shareViaWhatsApp = () => {\n    const message = encodeURIComponent(`Check out my workplace personality quiz result! ${window.location.href}`);\n    const whatsappUrl = `https://api.whatsapp.com/send?text=${message}`;\n    window.open(whatsappUrl, '_blank');\n  };\n\n  // Function to download the image\n  const downloadImage = () => {\n    const imageUrl = `/images/${mbtiType}.png`;\n    const link = document.createElement('a');\n    link.href = imageUrl;\n    link.download = `${mbtiType}_result.png`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Render the result content only if mbtiType has a value\n  if (!mbtiType) return null; // Don't render anything if mbtiType is empty\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"results-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/${mbtiType}.png`,\n        alt: mbtiType,\n        className: \"mbti-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartQuiz,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Restart Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyToClipboard,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: copied ? 'Copied!' : 'Copy Quiz Link to Clipboard'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circular-icon telegram\",\n        onClick: shareViaTelegram,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: svgUrls.telegram,\n          alt: \"Telegram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circular-icon whatsapp\",\n        onClick: shareViaWhatsApp,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: svgUrls.whatsapp,\n          alt: \"WhatsApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circular-icon download\",\n        onClick: downloadImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: svgUrls.download,\n          alt: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultPage, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");\n_c = ResultPage;\nexport default ResultPage;\nvar _c;\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"names":["svgUrls","React","useState","jsxDEV","_jsxDEV","ResultPage","mbtiType","restartQuiz","_s","copied","setCopied","copyToClipboard","navigator","clipboard","writeText","window","location","href","error","console","shareViaTelegram","message","encodeURIComponent","telegramUrl","open","shareViaWhatsApp","whatsappUrl","downloadImage","imageUrl","link","document","createElement","download","body","appendChild","click","removeChild","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","telegram","whatsapp","_c","$RefreshReg$"],"sources":["/Users/bytedance/PersonalityQuiz/my-personality-quiz/src/ResultPage.js"],"sourcesContent":["\nimport svgUrls from './svgurl'; // Import SVG URLs\nimport React, { useState } from 'react';\n\nconst ResultPage = ({ mbtiType, restartQuiz }) => {\n    const [copied, setCopied] = useState(false);\n    // Function to share the quiz link\n// Function to share the quiz link\n\nconst copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(window.location.href);\n      setCopied(true);\n    } catch (error) {\n      console.error('Error copying to clipboard:', error);\n    }\n  };\n\n\n  // Function to share via Telegram\n  const shareViaTelegram = () => {\n    const message = encodeURIComponent(`Check out my workplace personality quiz result! ${window.location.href}`);\n    const telegramUrl = `https://t.me/share/url?url=${message}`;\n    window.open(telegramUrl, '_blank');\n  };\n\n  // Function to share via WhatsApp\n  const shareViaWhatsApp = () => {\n    const message = encodeURIComponent(`Check out my workplace personality quiz result! ${window.location.href}`);\n    const whatsappUrl = `https://api.whatsapp.com/send?text=${message}`;\n    window.open(whatsappUrl, '_blank');\n  };\n\n  // Function to download the image\n  const downloadImage = () => {\n    const imageUrl = `/images/${mbtiType}.png`;\n    const link = document.createElement('a');\n    link.href = imageUrl;\n    link.download = `${mbtiType}_result.png`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Render the result content only if mbtiType has a value\n  if (!mbtiType) return null; // Don't render anything if mbtiType is empty\n\n  return (\n    <section className=\"results-page\">\n      <div className=\"result-content\">\n        <img src={`/images/${mbtiType}.png`} alt={mbtiType} className=\"mbti-image\" />\n\n        <button onClick={restartQuiz}><span>Restart Quiz</span></button>\n        <button onClick={copyToClipboard}><span>{copied ? 'Copied!' : 'Copy Quiz Link to Clipboard'}</span></button>\n        \n        <div className=\"circular-icon telegram\" onClick={shareViaTelegram}>\n          <img src={svgUrls.telegram} alt=\"Telegram\" />\n        </div>\n        <div className=\"circular-icon whatsapp\" onClick={shareViaWhatsApp}>\n          <img src={svgUrls.whatsapp} alt=\"WhatsApp\" />\n        </div>\n        <div className=\"circular-icon download\" onClick={downloadImage}>\n          <img src={svgUrls.download} alt=\"Download\" />\n        </div>\n      </div>\n    </section>\n  );\n  \n};\n\nexport default ResultPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}