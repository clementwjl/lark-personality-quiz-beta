{"ast":null,"code":"var _jsxFileName = \"/Users/bytedance/PersonalityQuiz/my-personality-quiz/src/ResultPage.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultPage = ({\n  mbtiType,\n  restartQuiz\n}) => {\n  // Function to copy the URL to the clipboard\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(window.location.href);\n      alert('URL copied to clipboard!');\n    } catch (error) {\n      console.error('Error copying to clipboard:', error);\n    }\n  };\n\n  // Render the result content only if mbtiType has a value\n  if (!mbtiType) return null; // Don't render anything if mbtiType is empty\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"results-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/${mbtiType}.png`,\n        alt: mbtiType,\n        className: \"mbti-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyToClipboard,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Share Quiz Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartQuiz,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Restart Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultPage;\nexport default ResultPage;\nvar _c;\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultPage","mbtiType","restartQuiz","copyToClipboard","navigator","clipboard","writeText","window","location","href","alert","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/bytedance/PersonalityQuiz/my-personality-quiz/src/ResultPage.js"],"sourcesContent":["import React from 'react';\n\nconst ResultPage = ({ mbtiType, restartQuiz }) => {\n  // Function to copy the URL to the clipboard\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(window.location.href);\n      alert('URL copied to clipboard!');\n    } catch (error) {\n      console.error('Error copying to clipboard:', error);\n    }\n  };\n\n  // Render the result content only if mbtiType has a value\n  if (!mbtiType) return null; // Don't render anything if mbtiType is empty\n\n  return (\n    <section className=\"results-page\">\n      <div className=\"result-content\">\n        <img src={`/images/${mbtiType}.png`} alt={mbtiType} className=\"mbti-image\" />\n        <button onClick={copyToClipboard}><span>Share Quiz Link</span></button>\n        <button onClick={restartQuiz}><span>Restart Quiz</span></button>\n      </div>\n    </section>\n  );\n};\n\nexport default ResultPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAChD;EACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;MACzDC,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;;EAED;EACA,IAAI,CAACV,QAAQ,EAAE,OAAO,IAAI,CAAC,CAAC;;EAE5B,oBACEF,OAAA;IAASc,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC/Bf,OAAA;MAAKc,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7Bf,OAAA;QAAKgB,GAAG,EAAG,WAAUd,QAAS,MAAM;QAACe,GAAG,EAAEf,QAAS;QAACY,SAAS,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7ErB,OAAA;QAAQsB,OAAO,EAAElB,eAAgB;QAAAW,QAAA,eAACf,OAAA;UAAAe,QAAA,EAAM;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvErB,OAAA;QAAQsB,OAAO,EAAEnB,WAAY;QAAAY,QAAA,eAACf,OAAA;UAAAe,QAAA,EAAM;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACE,EAAA,GAvBItB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}