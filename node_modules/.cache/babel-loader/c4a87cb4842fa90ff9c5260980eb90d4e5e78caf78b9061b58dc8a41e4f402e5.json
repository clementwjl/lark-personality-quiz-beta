{"ast":null,"code":"var _jsxFileName = \"/Users/bytedance/PersonalityQuiz/my-personality-quiz/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LoaderPage from './LoaderPage'; // Import LoaderPage component\nimport StartPage from './StartPage'; // Import StartPage component\nimport QuestionPage from './QuestionPage'; // Import QuestionPage component\nimport ResultPage from './ResultPage'; // Import ResultPage component\nimport svgUrls from './svgurl'; // Import SVG URLs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userSelections, setUserSelections] = useState([]);\n  const [mbtiType, setMbtiType] = useState('');\n  const [showLoader, setShowLoader] = useState(false);\n  const [backgroundImage, setBackgroundImage] = useState('url(\"\")');\n  const [isQuestionPage, setIsQuestionPage] = useState(false); // State to track if it's a question page\n\n  const fontColorRanges = [{\n    start: 1,\n    end: 5,\n    color: '#ffffff'\n  },\n  // Questions 1 to 5 with white font color\n  {\n    start: 6,\n    end: 9,\n    color: '#3835D5'\n  }, {\n    start: 10,\n    end: 10,\n    color: '#ffffff'\n  } // Questions 6 to 10 with black font color\n  ];\n  const questions = [{\n    question: \"Q1/12: You get magically teleported into a new company and wake up to your team looking over you in excitement and a gleam in their eyes. Your first thought:\",\n    optionA: \"What the?! Where am I? Who are these people?\",\n    optionB: \"I've never had anyone look at me with such eagerness.\"\n  }\n  // Rest of the questions...\n  ];\n  const displayNextQuestion = selectedOption => {\n    setUserSelections(prevSelections => [...prevSelections, selectedOption]);\n    setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n  };\n  const restartQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setUserSelections([]);\n    console.log(\"Quiz restarted. User Selections cleared.\");\n  };\n  const calculateMBTI = () => {\n    // Calculation logic...\n  };\n  const handleQuizCompletion = () => {\n    if (currentQuestionIndex > questions.length) {\n      setShowLoader(true);\n    }\n  };\n  const handleShowResults = () => {\n    setShowLoader(false);\n    calculateMBTI();\n  };\n  useEffect(() => {\n    if (currentQuestionIndex === 0) {\n      // Set the background image URL to the start page SVG\n      const startPageUrl = svgUrls[\"startpage\"];\n      setBackgroundImage(`url(\"${startPageUrl}\")`);\n    } else if (currentQuestionIndex > 0 && currentQuestionIndex <= questions.length) {\n      // Set the background image URL based on the current question index\n      const imageUrl = svgUrls[`illus${currentQuestionIndex}`];\n      setBackgroundImage(`url(\"${imageUrl}\")`);\n    }\n  }, [currentQuestionIndex, questions.length, svgUrls]);\n  useEffect(() => {\n    // Effect for updating isQuestionPage state\n    setIsQuestionPage(currentQuestionIndex > 0 && currentQuestionIndex <= questions.length);\n  }, [currentQuestionIndex, questions.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container ${isQuestionPage ? 'question-page-container' : ''}`,\n    style: {\n      backgroundImage\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [showLoader && /*#__PURE__*/_jsxDEV(LoaderPage, {\n        handleShowResults: handleShowResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 24\n      }, this), \" \", currentQuestionIndex === 0 && !showLoader && /*#__PURE__*/_jsxDEV(StartPage, {\n        displayNextQuestion: displayNextQuestion,\n        svgUrls: svgUrls,\n        backgroundImage: backgroundImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), currentQuestionIndex > 0 && currentQuestionIndex <= questions.length && !showLoader && /*#__PURE__*/_jsxDEV(QuestionPage, {\n        question: questions[currentQuestionIndex - 1].question,\n        optionA: questions[currentQuestionIndex - 1].optionA,\n        optionB: questions[currentQuestionIndex - 1].optionB,\n        displayNextQuestion: displayNextQuestion,\n        currentQuestionIndex: currentQuestionIndex,\n        totalQuestions: questions.length,\n        svgUrls: svgUrls,\n        backgroundImage: backgroundImage,\n        fontColorRanges: fontColorRanges // Pass fontColorRanges as prop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), currentQuestionIndex > questions.length && !showLoader && /*#__PURE__*/_jsxDEV(ResultPage, {\n        restartQuiz: restartQuiz,\n        calculateMBTI: calculateMBTI,\n        userSelections: userSelections\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q43MKvdxUWt0LvQN/3BN5e1AcIk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoaderPage","StartPage","QuestionPage","ResultPage","svgUrls","jsxDEV","_jsxDEV","App","_s","currentQuestionIndex","setCurrentQuestionIndex","userSelections","setUserSelections","mbtiType","setMbtiType","showLoader","setShowLoader","backgroundImage","setBackgroundImage","isQuestionPage","setIsQuestionPage","fontColorRanges","start","end","color","questions","question","optionA","optionB","displayNextQuestion","selectedOption","prevSelections","prevIndex","restartQuiz","console","log","calculateMBTI","handleQuizCompletion","length","handleShowResults","startPageUrl","imageUrl","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","totalQuestions","_c","$RefreshReg$"],"sources":["/Users/bytedance/PersonalityQuiz/my-personality-quiz/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LoaderPage from './LoaderPage'; // Import LoaderPage component\nimport StartPage from './StartPage'; // Import StartPage component\nimport QuestionPage from './QuestionPage'; // Import QuestionPage component\nimport ResultPage from './ResultPage'; // Import ResultPage component\nimport svgUrls from './svgurl'; // Import SVG URLs\n\nfunction App() {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userSelections, setUserSelections] = useState([]);\n  const [mbtiType, setMbtiType] = useState('');\n  const [showLoader, setShowLoader] = useState(false);\n  const [backgroundImage, setBackgroundImage] = useState('url(\"\")');\n  const [isQuestionPage, setIsQuestionPage] = useState(false); // State to track if it's a question page\n\n  const fontColorRanges = [\n    { start: 1, end: 5, color: '#ffffff' }, // Questions 1 to 5 with white font color\n    { start: 6, end: 9, color: '#3835D5' },\n    { start: 10, end: 10, color: '#ffffff' }, // Questions 6 to 10 with black font color\n  ];\n  \n  const questions = [\n    {\n      question: \"Q1/12: You get magically teleported into a new company and wake up to your team looking over you in excitement and a gleam in their eyes. Your first thought:\",\n      optionA: \"What the?! Where am I? Who are these people?\",\n      optionB: \"I've never had anyone look at me with such eagerness.\",\n    },\n    // Rest of the questions...\n  ];\n\n  const displayNextQuestion = (selectedOption) => {\n    setUserSelections(prevSelections => [...prevSelections, selectedOption]);\n    setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n  };\n\n  const restartQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setUserSelections([]);\n    console.log(\"Quiz restarted. User Selections cleared.\");\n  };\n\n  const calculateMBTI = () => {\n    // Calculation logic...\n  };\n\n  const handleQuizCompletion = () => {\n    if (currentQuestionIndex > questions.length) {\n      setShowLoader(true);\n    }\n  };\n\n  const handleShowResults = () => {\n    setShowLoader(false);\n    calculateMBTI();\n  };\n\n  useEffect(() => {\n    if (currentQuestionIndex === 0) {\n      // Set the background image URL to the start page SVG\n      const startPageUrl = svgUrls[\"startpage\"];\n      setBackgroundImage(`url(\"${startPageUrl}\")`);\n    } else if (currentQuestionIndex > 0 && currentQuestionIndex <= questions.length) {\n      // Set the background image URL based on the current question index\n      const imageUrl = svgUrls[`illus${currentQuestionIndex}`];\n      setBackgroundImage(`url(\"${imageUrl}\")`);\n    }\n  }, [currentQuestionIndex, questions.length, svgUrls]);\n  \n  useEffect(() => {\n    // Effect for updating isQuestionPage state\n    setIsQuestionPage(currentQuestionIndex > 0 && currentQuestionIndex <= questions.length);\n  }, [currentQuestionIndex, questions.length]);\n\n  return (\n    <div className={`container ${isQuestionPage ? 'question-page-container' : ''}`} style={{backgroundImage}}>\n      <main>\n        {showLoader && <LoaderPage handleShowResults={handleShowResults} />} {/* Display LoaderPage when showLoader is true */}\n\n        {/* Start Page */}\n        {currentQuestionIndex === 0 && !showLoader && (\n          <StartPage \n            displayNextQuestion={displayNextQuestion} \n            svgUrls={svgUrls} \n            backgroundImage={backgroundImage} \n          />\n        )}\n\n        {/* Question Pages */}\n        {currentQuestionIndex > 0 && currentQuestionIndex <= questions.length && !showLoader && (\n          <QuestionPage \n            question={questions[currentQuestionIndex - 1].question} \n            optionA={questions[currentQuestionIndex - 1].optionA} \n            optionB={questions[currentQuestionIndex - 1].optionB} \n            displayNextQuestion={displayNextQuestion} \n            currentQuestionIndex={currentQuestionIndex} \n            totalQuestions={questions.length} \n            svgUrls={svgUrls} \n            backgroundImage={backgroundImage} \n            fontColorRanges={fontColorRanges} // Pass fontColorRanges as prop\n          />\n        )}\n\n        {/* Result Page */}\n        {currentQuestionIndex > questions.length && !showLoader && (\n          <ResultPage \n            restartQuiz={restartQuiz} \n            calculateMBTI={calculateMBTI} \n            userSelections={userSelections} \n          />\n        )}\n      </main>\n      <footer>\n        {/* Footer content */}\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}